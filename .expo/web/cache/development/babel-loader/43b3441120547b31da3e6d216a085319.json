{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nrpu\\\\Desktop\\\\Mobile App development\\\\HistoryArchiveApp\\\\context\\\\tokenType.js\";\n\nimport React, { useState } from 'react';\nvar TokenType = React.createContext();\nexport var TokenProvider = function TokenProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  return React.createElement(TokenType.Provider, {\n    value: {\n      token: token,\n      setToken: setToken,\n      type: type,\n      setType: setType\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, children);\n};\nexport default TokenType;","map":{"version":3,"sources":["C:/Users/nrpu/Desktop/Mobile App development/HistoryArchiveApp/context/tokenType.js"],"names":["React","useState","TokenType","createContext","TokenProvider","children","token","setToken","type","setType"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,IAAMC,SAAS,GAAGF,KAAK,CAACG,aAAN,EAAlB;AAEA,OAAO,IAAMC,aAAa,GAAE,SAAfA,aAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBAEdJ,QAAQ,EAFM;AAAA;AAAA,MAEjCK,KAFiC;AAAA,MAE1BC,QAF0B;;AAAA,mBAGhBN,QAAQ,EAHQ;AAAA;AAAA,MAGjCO,IAHiC;AAAA,MAG3BC,OAH2B;;AAKxC,SAAO,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAK,EAACA,KAAP;AAAcC,MAAAA,QAAQ,EAACA,QAAvB;AAAiCC,MAAAA,IAAI,EAACA,IAAtC;AAA4CC,MAAAA,OAAO,EAACA;AAApD,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FJ,QAA1F,CAAP;AACH,CANM;AAQP,eAAeH,SAAf","sourcesContent":["import React, {useState} from 'react'; \r\n\r\nconst TokenType = React.createContext();\r\n\r\nexport const TokenProvider =({children}) => {\r\n\r\n    const [token ,setToken] = useState();\r\n    const [type ,setType] = useState();\r\n\r\n    return <TokenType.Provider value={{token:token, setToken:setToken, type:type, setType:setType}}>{children}</TokenType.Provider>\r\n}\r\n\r\nexport default TokenType;\r\n"]},"metadata":{},"sourceType":"module"}